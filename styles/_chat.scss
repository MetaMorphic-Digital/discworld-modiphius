@use "sass:color";

@use "utils/dice" as *;
@use "utils/trait-quote" as *;

@use "variables/color" as *;
@use "variables/fonts" as *;

.chat-message .discworld {
  header {
    margin: 0.25rem 0;
  }

  @include trait-quote;

  .trait-container {
    border-radius: 10px;

    // This is a repitition of the `callout-primary` mixin, but because
    // chat cards are not themed, and the callout is, we can't use it.
    background-image: linear-gradient(
      color.adjust($discworld-sand, $alpha: -0.65) 0%,
      transparent 90%
    );
    box-shadow: inset 0 0 20px #dbdbdb;
    filter: drop-shadow(0 0 10px color.adjust($discworld-sand, $alpha: -0.65));
    padding-top: 0.125rem;

    h4 {
      color: $discworld-brown;
      font-size: 1.25rem;
      font-family: $font-caslon;

      padding: 0 0.25rem;

      margin: 0.125rem 0;

      &::before,
      &::after {
        border-top-color: $discworld-brown;
      }
    }
  }

  .dice-rolls {
    gap: 0.25rem;

    .outcome-container {
      flex: 1;

      color: var(--color-light-1);
      text-align: center;

      button {
        margin: 0.25rem 0;
        line-height: unset;
        height: 1.5rem;
        width: 100%;

        &:disabled {
          filter: blur(0.5px);
          cursor: unset;
        }

        &:hover {
          background-color: $discworld-sand-light;
          text-shadow: 0 0 10px #1a1a1a;
        }
      }

      ol.result {
        list-style: none;

        display: flex;
        justify-content: center;

        text-align: center;
        font-weight: bold;
        font-size: 1.25rem;

        margin: 0;
        padding: 0.125rem 0;

        background: rgba(0, 0, 0, 0.1);
        border: 1px solid var(--color-border-light-2);
        border-radius: 3px;
        box-shadow: 0 0 2px #fff inset;

        &.winner {
          box-shadow:
            0 0 8px #18520b,
            inset 0 0 8px #18520b;
        }

        &.tie {
          filter: sepia(0.5) drop-shadow(2px 4px 6px #000000);
        }

        li {
          $height: 2.25rem;
          height: $height;
          width: $height;
          align-items: center;
          justify-content: center;

          // Animation Properties
          $anim: ease-in-out 0.5s;
          opacity: 1;
          transform: translateX(0);
          transition:
            opacity $anim,
            transform $anim;

          @include dice-backgrounds;

          // Mixin applied to either the whole <li>, or the enclosed <span>
          @mixin not-visible {
            &.not-visible {
              opacity: 0;
              transition: opacity $anim;
            }
          }

          @include not-visible;

          span {
            flex: 0 0 auto;
            opacity: 1;
            transition: opacity $anim;

            text-shadow:
              0 0 4px #000,
              0 0 8px #000;

            backdrop-filter: blur(1px);
            border-radius: 50%;
            padding: 0 0.25rem;

            @include not-visible;
          }

          // Move the d4 result text down a bit to better align with the dice icon.
          &.d4 span {
            display: inline-block;
            transform: translateY(0.125rem);
          }

          &.shift-center {
            transform: translateX(calc($height / 2));
          }

          &.inactive {
            transform: scale(90%);
            filter: saturate(0.25);
          }
        }
      }
    }

    .dice-roll + .dice-roll {
      margin-top: unset;
    }
  }
}
